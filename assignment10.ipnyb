{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"assignment10.ipnyb","provenance":[{"file_id":"1bHNhafqHlIA3AaK0c6fAvfKFQBlNBnod","timestamp":1591081918804},{"file_id":"1Mr5v5OPayPbxpgFqqP9RAOAlAT6AeP9t","timestamp":1590465551420},{"file_id":"1ZOY7WhtpuImqOCq6xH9xb3SKjZpWsjDg","timestamp":1590042024344},{"file_id":"1lHsUCT-169HWJX_gH3AHVWMCPf8_fgp6","timestamp":1589267672437},{"file_id":"1kxLGScNJFdPu0TJjKnYjdBghuA8RpayJ","timestamp":1588227282478},{"file_id":"14sk42Vw2kXkbmmU_DRavxSB79umcYmY-","timestamp":1587433034302}],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyPMlk8X5cvX6Fj/WA5EDyKr"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Eh-H3h7uYq8L","colab_type":"text"},"source":["Multi-label classification using neural networks with a regularization.\n","---"]},{"cell_type":"markdown","metadata":{"id":"TJv1FZVQW5RH","colab_type":"text"},"source":["1. input data"]},{"cell_type":"code","metadata":{"id":"ZPDm2rL0I6GP","colab_type":"code","outputId":"7fe90984-b473-4a3d-de0f-e55671312de1","executionInfo":{"status":"ok","timestamp":1591265851266,"user_tz":-540,"elapsed":10352,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}},"colab":{"base_uri":"https://localhost:8080/","height":495}},"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","\n","file_data   = \"mnist.csv\"\n","handle_file = open(file_data, \"r\")\n","data        = handle_file.readlines()\n","handle_file.close()\n","\n","size_row    = 28    # height of the image\n","size_col    = 28    # width of the image\n","\n","num_image   = len(data)\n","count       = 0     # count for the number of images\n","print(num_image)    # num_image is 10000.\n","\n","\n","#\n","# normalize the values of the input data to be [0, 1]\n","#\n","def normalize(data):\n","\n","    data_normalized = (data - min(data)) / (max(data) - min(data))\n","\n","    return(data_normalized)\n","\n","#\n","# example of distance function between two vectors x and y\n","#\n","def distance(x, y):\n","\n","    d = (x - y) ** 2\n","    s = np.sum(d)\n","    # r = np.sqrt(s)\n","\n","    return(s)\n","\n","#\n","# make a matrix each column of which represents an images in a vector form\n","#\n","list_image  = np.empty((size_row * size_col, num_image), dtype=float)\n","list_label  = np.empty(num_image, dtype=int)\n","\n","for line in data:\n","\n","    line_data   = line.split(',')\n","    label       = line_data[0]\n","    im_vector   = np.asfarray(line_data[1:])\n","    im_vector   = normalize(im_vector)\n","\n","    list_label[count]       = label\n","    list_image[:, count]    = im_vector\n","\n","    count += 1\n","\n","#\n","# plot first 150 images out of 10,000 with their labels\n","#\n","f1 = plt.figure(1)\n","\n","for i in range(150):\n","\n","    label       = list_label[i]\n","    im_vector   = list_image[:, i]\n","    im_matrix   = im_vector.reshape((size_row, size_col))\n","\n","    plt.subplot(10, 15, i+1)\n","    plt.title(label)\n","    plt.imshow(im_matrix, cmap='Greys', interpolation='None')\n","\n","    frame   = plt.gca()\n","    frame.axes.get_xaxis().set_visible(False)\n","    frame.axes.get_yaxis().set_visible(False)\n","\n","\n","#plt.show()\n","\n","#\n","# plot the average image of all the images for each digit\n","#\n","f2 = plt.figure(2)\n","\n","im_average  = np.zeros((size_row * size_col, 10), dtype=float)\n","im_count    = np.zeros(10, dtype=int)\n","\n","for i in range(num_image):\n","\n","    im_average[:, list_label[i]] += list_image[:, i]\n","    im_count[list_label[i]] += 1\n","\n","for i in range(10):\n","\n","    im_average[:, i] /= im_count[i]\n","\n","    plt.subplot(2, 5, i+1)\n","    plt.title(i)\n","    plt.imshow(im_average[:,i].reshape((size_row, size_col)), cmap='Greys', interpolation='None')\n","\n","    frame   = plt.gca()\n","    frame.axes.get_xaxis().set_visible(False)\n","    frame.axes.get_yaxis().set_visible(False)\n","\n","plt.show()\n"],"execution_count":891,"outputs":[{"output_type":"stream","text":["10000\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 150 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 10 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"HPo20R-uSEYE","colab_type":"text"},"source":["- load the data file ('mnist.csv')\n","- each row contains label is digit $l \\in [0, 9]$ and 28 by 28 image pixel values $x \\in R^{784}$"]},{"cell_type":"code","metadata":{"id":"cv63DD8gSCT2","colab_type":"code","outputId":"a1395686-544c-42b0-f6d0-888f401953b7","executionInfo":{"status":"ok","timestamp":1591265851267,"user_tz":-540,"elapsed":10331,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}},"colab":{"base_uri":"https://localhost:8080/","height":119}},"source":["print(list_image.shape)\n","\n","# list_image = list_image.transpose()\n","# list_label = list_label.transpose()\n","\n","# # convert label_to_one_hot\n","print(list_label.shape)  # 10000, \n","num = np.unique(list_label, axis=0)\n","num = num.shape[0]\n","list_label = np.eye(num)[list_label] # \n","list_label = list_label.transpose()  # 10, 10000\n","\n","train_image = list_image[:, :1000]\n","train_label = list_label[:, :1000]\n","test_image = list_image[:, 1000:]\n","test_label = list_label[:, 1000:]\n","\n","print(train_image.shape)  # (784, 1000)\n","print(train_label.shape)  # (10, 1000)\n","\n","print(test_image.shape)   # (784, 9000)\n","print(test_label.shape)   # (10, 9000)"],"execution_count":892,"outputs":[{"output_type":"stream","text":["(784, 10000)\n","(10000,)\n","(784, 1000)\n","(10, 1000)\n","(784, 9000)\n","(10, 9000)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"QI8W7pt2T3hs","colab_type":"text"},"source":["- consider first 1000 images for training and rest 9000 images for testing.\n","- normalized the image data whose ranges from 0 to 1.\n","- convert label to one-hot encoding label"]},{"cell_type":"markdown","metadata":{"id":"RGKX-MJ6Y4Kj","colab_type":"text"},"source":["---\n","2. neural network architecture\n"]},{"cell_type":"code","metadata":{"id":"0qko7X-50jnh","colab_type":"code","colab":{}},"source":["def sigmoid_(z):\n","  return 1 / (1 + np.exp(-1 * z))"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sm6ZUmlGnJfz","colab_type":"text"},"source":["- make sigmoid function for activation."]},{"cell_type":"code","metadata":{"id":"mgF2ZBUKYXai","colab_type":"code","colab":{}},"source":["import numpy as np\n","\n","def network_forward(input_x, thetas, biases):\n","  \"\"\"\n","  input_x : a image of \n","  thetas : list of theta\n","  biases : list of bias\n","  \"\"\"\n","\n","  a = []\n","  num_layer = len(thetas)\n","  a.append(input_x)\n","  a_b = input_x                                     # a before \n","  for theta, bias in zip(thetas, biases):\n","    # print(\"theta's shape : \", theta.shape)      # 512, 784 etc...\n","    # print(\"bias' shape : \", bias.shape)         # 512, 1   etc...\n","    a_b = sigmoid_(np.matmul(theta, a_b) + bias)  # 512, 1 etc...\n","    # print(\"a_before's shape : \", a_b.shape)\n","    a.append(a_b)\n","\n","  # print(\"num of output is \", len(a))\n","  return a"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"m1nUcJUqcDnE","colab_type":"text"},"source":["- make network architecture and forwarding.\n","- set parameter's type is list and return is list of output of each layers."]},{"cell_type":"code","metadata":{"id":"fHmzfZXWjQzS","colab_type":"code","colab":{}},"source":["def network_backward(a, x, y, thetas, biases, learning_rate=1e-3, lambda_=5e-4):\n","  \n","  # get the delta\n","  deltas = []\n","  delta_before = a[-1] - y                           # 10, 1\n","  deltas.append(delta_before) \n","  # ------------------------- make reverse delta --------------------------\n","  thetas_r = thetas[::-1] # 6. 5. 4. 3. 2. 1\n","  thetas_r = thetas_r[:-1]# 6, 5, 4, 3, 2\n","\n","  # a                     # 1, 2, 3, 4, 5, 6, 7\n","  a_r = a[::-1]           # 7, 6, 5, 4, 3, 2, 1  \n","  a_r = a_r[1:-1]         # 6, 5, 4, 3, 2\n","\n","  for reverse_theta, reverse_a in zip(thetas_r, a_r):\n","    delta_before = np.matmul(reverse_theta.transpose(), delta_before) * reverse_a * (1-reverse_a)\n","    deltas.append(delta_before)\n","\n","  deltas_r = deltas[::-1]  # 2, 3, 4, 5, 6, 7\n","  new_gds = []\n","\n","  for delta_r, a_ in zip(deltas_r, a):\n","    new_gds.append(delta_r @ a_.transpose())\n","\n","  new_thetas = []\n","  new_biases = []\n","\n","  for new_gd, th, delta_r, bias in zip(new_gds, thetas, deltas_r, biases):\n","    new_thetas.append(th - learning_rate * new_gd + th * lambda_)\n","    new_biases.append(bias - learning_rate * delta_r)\n","\n","  return new_thetas, new_biases"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"48s40L-UvLbw","colab_type":"text"},"source":["- make back propagation for nn by myself.\n","- if l is final layer, $\\delta^{l} = a^{l} - y$, else l is not final layer, $\\delta^{l} = (\\theta^{l-1})^{T}\\delta^{l-1} * a^{l-1} * (1 - a^{l-1})$\n","- $new gradient^{(l + 1)} = gradient^{(l)} + \\delta_{j}^{(l+1)} * (a_{j}^{(l)})^{T}$"]},{"cell_type":"code","metadata":{"id":"Wzw8SIxy1NFl","colab_type":"code","colab":{}},"source":["def criterion(out, y, thetas, biases, lambda_=5e-4):\n","  # out - shape : [10, 1]\n","  # y - shape : [10, 1] \n","  # print(\"out's shape : \", out.shape)\n","  # print(\"y's shape : \", y.shape)\n","\n","  out = out.squeeze()  # [10]\n","  y = y.squeeze()      # [10]\n","  \n","  l2_term = 0 \n","  for theta, bias in zip(thetas, biases):\n","    l2_term += np.mean(np.square(theta))\n","    l2_term += np.mean(np.square(bias))\n","\n","  if l2_term == 0:\n","    loss = np.mean(-1 * (y * np.log(out) + (1-y) * np.log(1-out)))\n","    return loss\n","\n","  l2_term *= lambda_\n","  l2_term /= 2\n","\n","  loss = np.mean(-1 * (y * np.log(out) + (1-y) * np.log(1-out))) + l2_term\n","  return loss\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RzphviVnO23t","colab_type":"text"},"source":["- make binary cross entropy loss for multi-label classification.\n","- add l2 normalization term."]},{"cell_type":"code","metadata":{"id":"2ewJMfRcPaYe","colab_type":"code","colab":{}},"source":["def is_same(pred, gt_label):\n","  \"\"\"\n","  pred: [10, 1]\n","  gt_label : [10, 1]\n","  \"\"\"\n","  # rint(pred.shape) # 10, 1\n","  pred = np.argmax(pred, axis=0)\n","  gt_label = np.argmax(label, axis=0)\n","\n","  return int(pred==gt_label)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CEGaj9Kfqwnb","colab_type":"text"},"source":["- make a function determine that predict label and gt label is same or not."]},{"cell_type":"markdown","metadata":{"id":"pYJ075rhy4ni","colab_type":"text"},"source":["--- \n","3. training"]},{"cell_type":"code","metadata":{"id":"w8p9inSpvOWp","colab_type":"code","outputId":"bdbaed7e-6794-490d-e946-c7f1ead5b510","executionInfo":{"status":"ok","timestamp":1591266246059,"user_tz":-540,"elapsed":405051,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["lambda_ = 5e-6\n","\n","# training\n","th1 = np.random.normal(loc=0.0, scale=0.1, size=(256, 784))\n","th2 = np.random.normal(loc=0.0, scale=0.1, size=(128, 256))\n","th3 = np.random.normal(loc=0.0, scale=0.1, size=(64, 128))\n","th4 = np.random.normal(loc=0.0, scale=0.1, size=(10, 64))\n","\n","thetas = [th1, th2, th3, th4]\n","\n","bias1 = np.random.normal(loc=0.0, scale=0.1, size=(256, 1))\n","bias2 = np.random.normal(loc=0.0, scale=0.1, size=(128, 1))\n","bias3 = np.random.normal(loc=0.0, scale=0.1, size=(64, 1))\n","bias4 = np.random.normal(loc=0.0, scale=0.1, size=(10, 1))\n","biases = [bias1, bias2, bias3, bias4]\n","\n","loss_list_for_train = []\n","acc_list_for_train = []\n","\n","loss_list_for_test = []\n","acc_list_for_test = []\n","\n","# define hyperparameter for multi-label classification\n","epochs = 30\n","learning_rate = 1e-1\n","decay_steps = [15, 30]\n","\n","for epoch in range(epochs):\n","  print('\\ntraining for epoch [{}]'.format(epoch))\n","  match_cnt = 0\n","  sum_loss = 0 \n","\n","  if epoch in decay_steps:\n","    learning_rate *= 0.5\n","\n","  # training \n","  for i in range(1000):\n","    # print(i)\n","\n","    if i == 999:\n","      acc = match_cnt / (i + 1)\n","      acc *= 100\n","      acc_list_for_train.append(acc)\n","      print(\"training_acc : {:.4f}\".format(acc))\n","\n","      mean_loss = sum_loss/(i + 1)\n","      loss_list_for_train.append(mean_loss)\n","\n","    image = train_image[:, i]\n","    label = train_label[:, i]\n","\n","    image = np.expand_dims(image, axis=1) # 784 --> 784, 1\n","    label = np.expand_dims(label, axis=1) # 10 --> 10, 1\n","    a_output = network_forward(image, thetas, biases)\n","\n","    out = a_output[-1]\n","    match_cnt += is_same(out, label)\n","    loss = criterion(out, label, thetas, biases, lambda_=lambda_)\n","\n","    sum_loss += loss \n","    thetas, biases = network_backward(a_output, image, label, thetas, biases, learning_rate, lambda_)\n","    \n","  match_cnt = 0\n","  sum_loss = 0 \n","  pred_idx = []\n","  pred_label = []\n","\n","  # testing\n","  for i in range(9000):\n","      if i == 8999:\n","        acc = match_cnt / (i + 1)\n","        acc *= 100\n","        \n","        acc_list_for_test.append(acc)\n","        print(\"testing_acc : {:.4f}\".format(acc))\n","\n","        mean_loss = sum_loss/(i + 1)\n","        loss_list_for_test.append(mean_loss)\n","\n","      \n","      image = test_image[:, i]\n","      label = test_label[:, i]\n","\n","      image = np.expand_dims(image, axis=1) # 784 --> 784, 1\n","      label = np.expand_dims(label, axis=1) # 10 --> 10, 1\n","\n","      a_output = network_forward(image, thetas, biases)\n","      out = a_output[-1]\n","      match_cnt += is_same(out, label)\n","\n","      pred = np.argmax(out, axis=0)\n","      gt_label = np.argmax(label, axis=0)\n","      pred_idx.append((pred == gt_label))\n","      pred_label.append(pred)\n","\n","      loss = criterion(out, label, thetas, biases, lambda_=lambda_)\n","      sum_loss += loss\n","      "],"execution_count":898,"outputs":[{"output_type":"stream","text":["\n","training for epoch [0]\n","training_acc : 11.8000\n","testing_acc : 19.0333\n","\n","training for epoch [1]\n","training_acc : 40.0000\n","testing_acc : 57.1222\n","\n","training for epoch [2]\n","training_acc : 66.1000\n","testing_acc : 75.9222\n","\n","training for epoch [3]\n","training_acc : 78.4000\n","testing_acc : 79.9000\n","\n","training for epoch [4]\n","training_acc : 85.8000\n","testing_acc : 82.7222\n","\n","training for epoch [5]\n","training_acc : 91.1000\n","testing_acc : 84.3444\n","\n","training for epoch [6]\n","training_acc : 93.9000\n","testing_acc : 84.8444\n","\n","training for epoch [7]\n","training_acc : 94.8000\n","testing_acc : 86.1111\n","\n","training for epoch [8]\n","training_acc : 96.5000\n","testing_acc : 85.7444\n","\n","training for epoch [9]\n","training_acc : 98.0000\n","testing_acc : 86.1444\n","\n","training for epoch [10]\n","training_acc : 97.9000\n","testing_acc : 86.9889\n","\n","training for epoch [11]\n","training_acc : 99.1000\n","testing_acc : 87.4111\n","\n","training for epoch [12]\n","training_acc : 99.3000\n","testing_acc : 87.7000\n","\n","training for epoch [13]\n","training_acc : 99.4000\n","testing_acc : 87.7778\n","\n","training for epoch [14]\n","training_acc : 99.6000\n","testing_acc : 87.6333\n","\n","training for epoch [15]\n","training_acc : 99.6000\n","testing_acc : 87.8444\n","\n","training for epoch [16]\n","training_acc : 99.7000\n","testing_acc : 88.0111\n","\n","training for epoch [17]\n","training_acc : 99.7000\n","testing_acc : 87.9889\n","\n","training for epoch [18]\n","training_acc : 99.7000\n","testing_acc : 88.0000\n","\n","training for epoch [19]\n","training_acc : 99.7000\n","testing_acc : 87.9667\n","\n","training for epoch [20]\n","training_acc : 99.7000\n","testing_acc : 88.0444\n","\n","training for epoch [21]\n","training_acc : 99.8000\n","testing_acc : 88.1333\n","\n","training for epoch [22]\n","training_acc : 99.8000\n","testing_acc : 88.1556\n","\n","training for epoch [23]\n","training_acc : 99.9000\n","testing_acc : 88.2000\n","\n","training for epoch [24]\n","training_acc : 99.9000\n","testing_acc : 88.2000\n","\n","training for epoch [25]\n","training_acc : 99.9000\n","testing_acc : 88.2222\n","\n","training for epoch [26]\n","training_acc : 99.9000\n","testing_acc : 88.2556\n","\n","training for epoch [27]\n","training_acc : 99.9000\n","testing_acc : 88.2667\n","\n","training for epoch [28]\n","training_acc : 99.9000\n","testing_acc : 88.3000\n","\n","training for epoch [29]\n","training_acc : 99.9000\n","testing_acc : 88.2778\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"EMyi6key4iyA","colab_type":"text"},"source":["- training until convergence at epoch 30\n","- theta and bias is applied to a normal distribution with mean 0 and standard deviation 0.1.\n","- learning rate decay is 0.5 every 15 epochs.\n","- only use numpy to implement gradient descent algorithm.\n","- network convert features like that (784 --> 256 --> 128 --> 64 --> 10)\n","- l2 norm's lambda is 5e-6."]},{"cell_type":"markdown","metadata":{"id":"x_HMQe2VX-5f","colab_type":"text"},"source":["--- \n","4. plot the loss curve"]},{"cell_type":"code","metadata":{"id":"B9gxCs7f4lr3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":279},"outputId":"1f7d0d59-5b32-4085-83c2-245c9489aa4e","executionInfo":{"status":"ok","timestamp":1591266246061,"user_tz":-540,"elapsed":405041,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}}},"source":["import matplotlib.pyplot as plt\n","\n","ax = plt.figure().gca()\n","# ax.set_xticks(np.arange(epoch + 1))\n","plt.plot(loss_list_for_train, c='b')\n","plt.plot(loss_list_for_test, c='r')\n","plt.legend(['training loss', 'testing loss'])\n","\n","plt.xlabel('epochs')\n","plt.ylabel('loss')\n","plt.show()"],"execution_count":899,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"j4MG2BHZYEQY","colab_type":"text"},"source":["--- \n","5. plot the accuracy curve\n"]},{"cell_type":"code","metadata":{"id":"eZu5_c7_9J6D","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":279},"outputId":"50ba0d64-f37e-44d9-f701-11019d4458fd","executionInfo":{"status":"ok","timestamp":1591266246367,"user_tz":-540,"elapsed":405339,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}}},"source":["ax = plt.figure().gca()\n","ax.set_xticks(np.arange(epoch + 1))\n","plt.plot(acc_list_for_train, c='b')\n","plt.plot(acc_list_for_test, c='r')\n","plt.legend(['training accuracy', 'testing accuracy'])\n","\n","plt.xlabel('epochs')\n","plt.ylabel('accuracy')\n","plt.show()"],"execution_count":900,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"_GPT4D91YLxh","colab_type":"text"},"source":["---\n","6. plot the accuracy value"]},{"cell_type":"code","metadata":{"id":"SnP2kwp5YVOx","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"97aacb9b-ff07-4cb9-efd3-42e6475ab42b","executionInfo":{"status":"ok","timestamp":1591266246368,"user_tz":-540,"elapsed":405324,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}}},"source":["print(\"final training accuracy : {:.4f}%\".format(acc_list_for_train[-1]))\n","print(\"final testing accuracy : {:.4f}%\".format(acc_list_for_test[-1]))"],"execution_count":901,"outputs":[{"output_type":"stream","text":["final training accuracy : 99.9000%\n","final testing accuracy : 88.2778%\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"WPHBiWG5jXcr","colab_type":"text"},"source":["--- \n","7. plot classification example."]},{"cell_type":"code","metadata":{"id":"4eV5jtXcjaE7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":522},"outputId":"7151e440-831d-40ea-9059-ee2d83f59dc4","executionInfo":{"status":"ok","timestamp":1591266246959,"user_tz":-540,"elapsed":405905,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}}},"source":["pred_idx = np.array(pred_idx).squeeze()\n","print(pred_idx)\n","pred_label = np.array(pred_label).squeeze()\n","index = pred_idx\n","\n","\n","right_index = index.astype(np.bool)\n","wrong_index = (1 - index).astype(np.bool)\n","\n","test_image_ = test_image.transpose()\n","pred_label_ = pred_label.transpose()\n","\n","right_image = test_image_[right_index]\n","right_label = pred_label_[right_index]\n","\n","right_example_image = right_image[:10] \n","right_example_label = right_label[:10] \n","\n","\n","print('\\ncorrectly classified testing images')\n","for i in range(10):\n","\n","    plt.subplot(2, 5, i+1)\n","    plt.title(right_example_label[i])\n","    plt.imshow(right_example_image[i, ...].reshape((size_row, size_col)), cmap='Greys', interpolation='None')\n","\n","    frame   = plt.gca()\n","    frame.axes.get_xaxis().set_visible(False)\n","    frame.axes.get_yaxis().set_visible(False)\n","\n","plt.show()\n","\n","print('\\nmisclassified testing images')\n","\n","wrong_image = test_image_[wrong_index]\n","wrong_label = pred_label_[wrong_index]\n","\n","wrong_example_image = wrong_image[:10] \n","wrong_example_label = wrong_label[:10] \n","# print(right_example_image.shape)\n","\n","for i in range(10):\n","\n","    plt.subplot(2, 5, i+1)\n","    plt.title(wrong_example_label[i])\n","    plt.imshow(wrong_example_image[i, ...].reshape((size_row, size_col)), cmap='Greys', interpolation='None')\n","\n","    frame   = plt.gca()\n","    frame.axes.get_xaxis().set_visible(False)\n","    frame.axes.get_yaxis().set_visible(False)\n","\n","plt.show()"],"execution_count":902,"outputs":[{"output_type":"stream","text":["[ True  True  True ...  True  True  True]\n","\n","correctly classified testing images\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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vNzIS/OaN28OxEX1ubzBihfhV5JCx9h4sxnfalvKPv/8cyB7vrtPnz5AXHq4uQ4++GAAFixYAMSbeH784x8D8PLLL69/7r777luj71UT/v6+9tprCz7HM90rrrgi6/PN9cwzzwDxHHA+Z511Vo2+h1MGLCISSCIZcOPGjdd/7POV3kzF555yeRWENxvp0KEDAOeccw4AH3zwARBnOj63VU6+973vAYU3mSxZsgSIsz5vRLPjjjsmEF1YVTcnVFVOdwO+JuCbkSCe56ytjUfettOzvmOPPRaIK24grryo6bbbzfHcc88BMH369ILP8TGlptup/TXlaytJUAYsIhJIIhlw1ebP3tjCt/lt6k8tb73omU5uhUAp23rrrYF4zte3m3qG269fPyC+o/DswOfJfGXW546lNPl74+qrr97gz44//viifE+fEz777LOBuNUpwAUXXADAxIkTi/K9v4vX93um7m04q/Jt1d6K89FHHwXi95HfTfsW/UJ3D97oaMqUKVmP16lTB8jOjFu2bLmJ/5L8lAGLiASSeAebmh6F4rvC3EcffQRA586da/R108B/2nsdo+9su+yyywCYO3cuAP379wdg8ODBWX//3nvvTSDKdPIspxz4+ojPy1bl8/zF8oc//AHIbt7jmWEIXvPua0WTJk0q+Nyvvvoq67m5TjzxRKDwLr8XX3wx7+N+TbxCpDYpAxYRCaRkejj6TzffE+58BbSc+H58b57te9F9Xq7q/BzAkUceCZTntagu74vhtZu77LJLyHBqhWf13q8BoF69ekX9np4d+msK4gMBXn31VSBMu9PbbrsNiKtAvB0kxAexbkzu3G51FbMOWhmwiEggJZMB+15wz4Rd+/btQ4RTVL5K6z/1X3nlFSA+kiiX74/31dpK5NniG2+8AcTz56Wspg3Fa6Lq7lU/AssPQfBufI0aNUosHv9e5513HpC9E83naHP5XLp3LnPegdEPfQhJGbCISCAlkwFXIt/T7lldoZ4Qfvhg165dkwkshTxb3GGHHQJHUh6qdvs699xzgbgrW6FdiEmqWstbqK7Xs+Zx48ZlPe7Hm20sA/Zdgd///vc3O86NUQYsIhJIyWTA//vf/4C4U1jI+bGk+b+9kKuuugqIqybSdppBkvyEglNPPTVwJJvP51z9DuhPf/rT+j/zY+eLXQ1RVcOGDRP7Xmnip4Y0bdq0aN9DGbCISCAlkwF7tzPPDryjf0131pWC3N6v/vmzzz4LxB38vXfE3nvvnWB0YfTo0QOIT4Yop51w3hPEs/iqPRi8Dr5Zs2ZFjWHp0qXrP77pppuAeF641DPijZ0n6K+pbbfdtuixKAMWEQkk9Rmw/8SvujcdYNCgQUDhyoBy4H1gvcrBM1vPiLwu2Fdphw0bBmz+jp9S4qf4+qkg3rPWO8T566aUdwfuueeeGzzm/7feF7u2+XmC/lqqyqsCSnWNwU9PrnqiclXe4ezCCy8EkqmrVwYsIhJI6jNgn6/xrme5K8TlaO3atQCMHj0aiLM5z0o868/tSVpbPUpLgVcB5PZ88NeJ75gs5QzYs3s/6wxg6NChALRt2xaITzXeVF7L6797lzGf7/3Pf/6z/rn33HMPEK+7lCrPfAt1VPN+v0meKKMMWEQkkNRnwLk8y+vSpUvgSIrHM+DcPe5ej+gZ8YQJE7L+/KCDDip+cCmTb54U4q5o2223XZLh1KrddtsNgJtvvnn9Y7724SfBjBo1Coh74HrGn9s18IYbbsj63He15daY77777kB2t7FS77fip0tXvY5VeZ/fYu54K0QZsIhIIBqARUQCKbkpiEowderUrM994XHatGlA3IrPN2B4g2xvF1hJevfuDcTbdb1V4m9+8xsAHn74YSDZrbu1zcuiIC4BGzFiBJDdlhHiY638+CrnG1V8C78vXvr1GzhwIAA777wzUF6L3H6gQaEt/X7MU4h/szJgEZFAUp8BF5o4L2dVt4FC3IDIy2i85WLfvn0BGDt2LJBsg+y08+PVC7UqLFW+AeOYY44B4oYxvhjni9O5GzX8iKEOHToAcSZd6tuKv4s3Xp8+ffp3Ps/bHISgDFhEJJDUpwcrV67M+txLSryMxptFlxPfcty5c2cgnuP1Bix+SGLr1q0DRJcunvXPnj07cCTJ8s0C3jjGf5eY3/34vHYaKQMWEQkk9RnwRRddBMSr2d4spFQbglTH/vvvD8SHcYrIpvNmOv369QPitRKvBLn33nsBaNCgQYDoMpQBi4gEkvoMuFOnTkB8LH337t2BymjELiI116ZNG2DjR3uFoAxYRCSQ1GfAzisDlixZEjgSEZHaoQxYRCQQ25TDDM1sETCveOGkQtsoilpU98kVck1gE66Lrkl+FXJddE3yy3tdNmkAFhGR2qMpCBGRQDQAi4gEogFYRCQQDcAiIoFoABYRCUQDsIhIIBqARUQC0QAsIhKIBmARkUD+H0jJqJy4WOgdAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 10 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"stream","text":["\n","misclassified testing images\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 10 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"ceDte3SYRr-S","colab_type":"text"},"source":["- present 10 correct, incorrect output and their label in 2x5 subfig"]},{"cell_type":"markdown","metadata":{"id":"tyuknNLD61xO","colab_type":"text"},"source":["---\n","8. testing accuracy "]},{"cell_type":"code","metadata":{"id":"cBDLncX368iQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"ba913dce-6586-4257-9806-5d3358bf3e1a","executionInfo":{"status":"ok","timestamp":1591267293600,"user_tz":-540,"elapsed":812,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}}},"source":["print(\"final testing accuracy : {:.4f}%\".format(acc_list_for_test[-1]))"],"execution_count":903,"outputs":[{"output_type":"stream","text":["final testing accuracy : 88.2778%\n"],"name":"stdout"}]}]}