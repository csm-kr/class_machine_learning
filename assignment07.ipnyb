{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"assignment07.ipnyb","provenance":[{"file_id":"1lHsUCT-169HWJX_gH3AHVWMCPf8_fgp6","timestamp":1589267672437},{"file_id":"1kxLGScNJFdPu0TJjKnYjdBghuA8RpayJ","timestamp":1588227282478},{"file_id":"14sk42Vw2kXkbmmU_DRavxSB79umcYmY-","timestamp":1587433034302}],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyNvVJWJo69vW7Km5CU5nb0/"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Eh-H3h7uYq8L","colab_type":"text"},"source":["Logistic regression for a binary classification with a regularization\n","---"]},{"cell_type":"markdown","metadata":{"id":"RGKX-MJ6Y4Kj","colab_type":"text"},"source":["---\n","1. training data"]},{"cell_type":"code","metadata":{"id":"mCjFypiJiAu_","colab_type":"code","outputId":"267caffb-a65c-4b52-a855-53048e0b55bd","executionInfo":{"status":"ok","timestamp":1589435533412,"user_tz":-540,"elapsed":858,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}},"colab":{"base_uri":"https://localhost:8080/","height":315}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","data    = np.genfromtxt(\"data-nonlinear.txt\", delimiter=',')\n","\n","pointX  = data[:, 0]  # 118 points\n","pointY  = data[:, 1] \n","label   = data[:, 2]\n","\n","pointX0 = pointX[label == 0]\n","pointY0 = pointY[label == 0]\n","\n","pointX1 = pointX[label == 1]\n","pointY1 = pointY[label == 1]\n","\n","plt.figure()\n","plt.scatter(pointX0, pointY0, c='b')\n","plt.scatter(pointX1, pointY1, c='r')\n","plt.tight_layout()\n","plt.gca().set_aspect('equal', adjustable='box')\n","plt.show()\n","\n","print(\"num_data :\", len(pointX))"],"execution_count":1098,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"stream","text":["num_data : 118\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kZGc4RmTrR2R","colab_type":"text"},"source":["- load data-nonlinear.txt we can get {x, y, l} datas\n","- x, y $\\in$ $R$ and l $\\in$ {0, 1}"]},{"cell_type":"markdown","metadata":{"id":"wPo1sEKhmErE","colab_type":"text"},"source":["---\n","2. Logistic regression with a high dimensional feature function"]},{"cell_type":"code","metadata":{"id":"s4jMs0hcmGRC","colab_type":"code","colab":{}},"source":["def ret_z(thetas, x, y):\n","  \"\"\"\n","  make Z fucntion : 100 dimensional of theta funtions\n","  :param thetas: np.ndarray - (10, 10) 2 dimensional ndarray\n","  :param x: 118 x data of points\n","  :param y: 118 y data of points\n","  :return: (118, ) z \n","  \"\"\"\n","  for i in range(10):\n","    for j in range(10):\n","      if i == 0 and j == 0 :\n","        z = thetas[i][j] \n","      z += thetas[i][j] * np.power(x, i) * np.power(y, i) # broadcasting () --> (118, )\n","  # print(z.shape)\n","  # print(type(z))\n","  return z "],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UioQf6vGmZ0X","colab_type":"text"},"source":["- make ret_z fucntion which is g(x, y; $\\theta$) = $\\sum_{i=0}^{9} \\sum_{j=0}^{9} \\theta_{i, j} x^{i} y^{j}$ \n","- number of data is 118 \n","- return shape is (118, )"]},{"cell_type":"code","metadata":{"id":"ayLY2fFXbZd_","colab_type":"code","colab":{}},"source":["def hypothesis(z):\n","  \"\"\"\n","  sigmoid of z is a hyphothesis\n","  :param z: (118, )\n","  :return: sigmoid - (118, ) \n","  \"\"\"\n","  sigmoid = 1 / (1 + np.exp(-1 * z))\n","  return sigmoid"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GpMtN91Mb-FE","colab_type":"text"},"source":["- make hypothesis function that returns sigmoid of z. \n","- input shape is (118, ) and output shape is (118, )"]},{"cell_type":"code","metadata":{"id":"BxP6eYbkmkL0","colab_type":"code","colab":{}},"source":["def binary_cross_entropy_loss (thetas, x, y, l, lambda_=1.):\n","  \"\"\"\n","  binary_cross_entropy_loss of 100 dimensional of thetas\n","  :param thetas: np.ndarray - (10, 10) 2 dimensional ndarray\n","  :param x: 118 x data of points\n","  :param y: 118 y data of points\n","  :return: (118, ) z \n","  \"\"\"\n","  m = len(x) # 118\n","  # print('num of data : ', m)\n","  z = ret_z(thetas, x, y)     # (118, )\n","  h = hypothesis(z)           # (118, )\n","  loss = np.sum(-l * np.log(h) - (1-l) * np.log(1 - h)) / m  + (lambda_ / 2 * np.sum(thetas))# scalar\n","  return loss"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wUTnwAuKnEYm","colab_type":"text"},"source":["- make bce loss for $\\sigma(z)$ and labels.\n","- add regularization term of thetas and lambda as $\\lambda \\over 2$ $\\sum_{i=0}^{9} \\sum_{j=0}^{9} \\theta^{2}_{i, j}$"]},{"cell_type":"code","metadata":{"id":"Fq65MnfvnKZa","colab_type":"code","colab":{}},"source":["def gradient_descent(thetas, x, y, l, lambda_=1., learning_rate=5e-2):\n","\n","  m = len(x)  \n","  z = ret_z(thetas, x, y)\n","  h = hypothesis(z)\n","\n","  gradient_thetas = np.zeros((10, 10))\n","  for i in range(10):\n","      for j in range(10):\n","          gradient_thetas[i][j] = np.sum((h - l) * np.power(x, i) * np.power(y, j)) / m + (lambda_ * thetas[i][j])\n","\n","  new_thetas = thetas - learning_rate * gradient_thetas\n","  return new_thetas"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-C6Nf2Aqo3zL","colab_type":"text"},"source":["- make gradient descent algorithm for logistic regression with a regularization.\n","- gradient of loss also contains derivatives of regularization term as $\\lambda\\theta^{(t)}_{i,j}$.\n","- learning rate is 1e-1."]},{"cell_type":"code","metadata":{"id":"25Eey-beRI3q","colab_type":"code","colab":{}},"source":["def get_accuracy(thetas, x, y, l):\n","    z = ret_z(thetas, x, y) # (100, )\n","    h = hypothesis(z) \n","    pred = (h > 0.5).astype(np.float32)  \n","\n","    right_num = sum(pred == l)\n","    whole_pred_num = len(x)\n","\n","    acc = right_num / whole_pred_num\n","    acc *= 100\n","    # print('accuracy : {:.4f}%'.format(acc))\n","    return acc"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cHxDa_jCRKoU","colab_type":"text"},"source":["- make get accuracy function that is computed by number of correct predictions over total number of predictions."]},{"cell_type":"code","metadata":{"id":"yFZd5KaAo-w9","colab_type":"code","colab":{}},"source":["# initialize thetas by ones.\n","thetas_1 = np.ones((10, 10))\n","thetas_2 = np.ones((10, 10))\n","thetas_3 = np.ones((10, 10))\n","\n","# you can use initial conditions to achieve the best accuracy\n","# thetas_1 = thetas_2 = thetas_3 = thetas\n","\n","lambda_1 = 0.0001             # over-fitting\n","lambda_2 = 0.002              # just-right \n","lambda_3 = 0.005              # under-fitting\n","\n","loss_list_1 = []\n","loss_list_2 = []\n","loss_list_3 = []\n","\n","acc_list_1 = []\n","acc_list_2 = []\n","acc_list_3 = []\n","\n","# until converge about 2000 steps\n","converge_step = 5000\n","for i in range(converge_step):\n","\n","  loss_1 = binary_cross_entropy_loss(thetas_1, pointX, pointY, label, lambda_=lambda_1)\n","  loss_list_1.append(loss_1)\n","  acc_list_1.append(get_accuracy(thetas_1, pointX, pointY, label))\n","\n","  loss_2 = binary_cross_entropy_loss(thetas_2, pointX, pointY, label, lambda_=lambda_2)\n","  loss_list_2.append(loss_2)\n","  acc_list_2.append(get_accuracy(thetas_2, pointX, pointY, label))\n","\n","  loss_3 = binary_cross_entropy_loss(thetas_3, pointX, pointY, label, lambda_=lambda_3)\n","  loss_list_3.append(loss_3)\n","  acc_list_3.append(get_accuracy(thetas_3, pointX, pointY, label))\n","  \n","  thetas_1 = gradient_descent(thetas_1, pointX, pointY, label, lambda_=lambda_1)\n","  thetas_2 = gradient_descent(thetas_2, pointX, pointY, label, lambda_=lambda_2)\n","  thetas_3 = gradient_descent(thetas_3, pointX, pointY, label, lambda_=lambda_3)\n","  "],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GDWNZIASEFpk","colab_type":"text"},"source":["- Initialize thetas as normal distributions to achieve the best accuracy.\n","- inital thetas is all equal. \n","- We use 3 $\\lambda$ values to find appropriate regularization terms.\n","- converge step is 2000"]},{"cell_type":"markdown","metadata":{"id":"dhEMj1SqEmw5","colab_type":"text"},"source":["---\n","3. plot the estimated parameters using the training dataset"]},{"cell_type":"code","metadata":{"id":"afCTvkbQv2Gv","colab_type":"code","colab":{}},"source":["import matplotlib.pyplot as plt\n","x_ = np.arange(converge_step)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8FGlnS2rET8I","colab_type":"text"},"source":["- define x_ to plot along with steps"]},{"cell_type":"markdown","metadata":{"id":"DiYz4kgnEdFn","colab_type":"text"},"source":["- plotting estimated parameters"]},{"cell_type":"markdown","metadata":{"id":"WFhJjaYWEx-Z","colab_type":"text"},"source":["---\n","4.  plot the training error"]},{"cell_type":"code","metadata":{"id":"oUZrJ6sCEhCg","colab_type":"code","outputId":"be988fac-2408-4189-f30b-9f15b2795a03","executionInfo":{"status":"ok","timestamp":1589435679088,"user_tz":-540,"elapsed":146491,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}},"colab":{"base_uri":"https://localhost:8080/","height":265}},"source":["plt.scatter(x_[200:], loss_list_1[200:], c='r')\n","plt.scatter(x_[200:], loss_list_2[200:], c='g')\n","plt.scatter(x_[200:], loss_list_3[200:], c='b')\n","\n","plt.show()"],"execution_count":1106,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"ol6-zsoKE64M","colab_type":"text"},"source":["- plot the training error"]},{"cell_type":"markdown","metadata":{"id":"oFlm4-lilN7V","colab_type":"text"},"source":["---\n","5. plot the training accuracy"]},{"cell_type":"code","metadata":{"id":"8d5OP59-X2Zi","colab_type":"code","outputId":"5acd3798-179b-4b03-c635-36c2b342274d","executionInfo":{"status":"ok","timestamp":1589435679892,"user_tz":-540,"elapsed":147283,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}},"colab":{"base_uri":"https://localhost:8080/","height":265}},"source":["plt.scatter(x_, acc_list_1, c='r')\n","plt.scatter(x_, acc_list_2, c='g')\n","plt.scatter(x_, acc_list_3, c='b')\n","plt.show()"],"execution_count":1107,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"P5ykXw2Q92Dt","colab_type":"text"},"source":["- plot the training accuracy "]},{"cell_type":"markdown","metadata":{"id":"O69esomp8d2o","colab_type":"text"},"source":["---\n","6. Compute the training accuracy\n"]},{"cell_type":"code","metadata":{"id":"TSBkUlkf-3mC","colab_type":"code","outputId":"0b283b61-ac6d-4cfb-f9e8-4584d733ac11","executionInfo":{"status":"ok","timestamp":1589435679892,"user_tz":-540,"elapsed":147274,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["acc_1 = get_accuracy(thetas_1, pointX, pointY, label)\n","print('final training accuracy of lambda_1 : {:.4f}%'.format(acc_1))\n","\n","acc_2 = get_accuracy(thetas_2, pointX, pointY, label)\n","print('final training accuracy of lambda_2 : {:.4f}%'.format(acc_2))\n","\n","acc_3 = get_accuracy(thetas_3, pointX, pointY, label)\n","print('final training accuracy of lambda_3 : {:.4f}%'.format(acc_3))"],"execution_count":1108,"outputs":[{"output_type":"stream","text":["final training accuracy of lambda_1 : 69.4915%\n","final training accuracy of lambda_2 : 65.2542%\n","final training accuracy of lambda_3 : 62.7119%\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"2QQz5s5cYp4I","colab_type":"text"},"source":["---\n","7. Plot the optimal classifier superimposed on the training data"]},{"cell_type":"code","metadata":{"id":"pzE5H5ajE-B7","colab_type":"code","outputId":"130c35fe-8a95-4f87-8d5a-a8672542ca53","executionInfo":{"status":"ok","timestamp":1589435680266,"user_tz":-540,"elapsed":147642,"user":{"displayName":"조성민","photoUrl":"","userId":"00315417681750132645"}},"colab":{"base_uri":"https://localhost:8080/","height":297}},"source":["X, Y = np.meshgrid(np.linspace(-1.0, 1.0, 100),\n","                   np.linspace(-1.0, 1.0, 100))\n","\n","# X, Y = np.meshgrid(np.linspace(-5.0, 5.0, 100),\n","#                    np.linspace(-5.0, 5.0, 100))\n","\n","# X, Y = np.meshgrid(np.linspace(-10.0, 10.0, 100),\n","#                    np.linspace(-10.0, 10.0, 100))\n","\n","Z_1 = ret_z(thetas_1, X, Y) \n","Z_2 = ret_z(thetas_2, X, Y) \n","Z_3 = ret_z(thetas_3, X, Y) \n","\n","plt.figure()\n","\n","plt.contour(X, Y, Z_1, colors='r', levels=[0])\n","plt.contour(X, Y, Z_2, colors='g', levels=[0])\n","plt.contour(X, Y, Z_3, colors='b', levels=[0])\n","\n","plt.scatter(pointX0, pointY0, c='b')\n","plt.scatter(pointX1, pointY1, c='r') \n","plt.tight_layout()\n","plt.gca().set_aspect('equal', adjustable='box')\n","plt.show()\n"],"execution_count":1109,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"g9J9S0XVYy6F","colab_type":"text"},"source":["- Plot the optimal classifier superimposed on the training data\n","- superimposed on training data"]}]}